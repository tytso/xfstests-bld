#if LINUX_VERSION_CODE < KERNEL_VERSION(5,18,0)
// We now allow cross-vfsmnt reflink/dedupe starting in 5.18.
// Older kernels will fail on generic/373 and generic/374 because
// these tests have been updated to cross-vfsmount reflink and dedupe,
// at least for those file systems which support reflink/dedupe
generic/373
generic/374
#endif

// "The test is just broken.  It made some odd assumptions on
// what RWF_NOMAIT means with buffered writes..." -- Jens Axboe
// https://lore.kernel.org/r/b2865bd6-2346-8f4d-168b-17f06bbedbed@kernel.dk
//
generic/471

#if LINUX_VERSION_CODE < KERNEL_VERSION(5,10,0)
// The proposed fix for generic/484, "locks: change POSIX lock
// ownership on execve when files_struct is displaced" would break NFS
// Jeff Layton and Eric Biederman have some ideas for how to address it
// but fixing it is non-trivial
generic/484
#endif

#if LINUX_VERSION_CODE < KERNEL_VERSION(5,4,0)
// This test has false positives on all file systems that don't support
// copy_file_range, since swap files can be read by root, and this
// test tries to enforce that copy_file_range won't work on swap files.
// Unfortunately, xfs_io falls back to read/write if necessary, which
// causes generic/554 to fail.
generic/554
#endif

#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0)
// This test failure is fixed by commit dacfd001eaf2
// ("fs/mnt_idmapping.c: Return -EINVAL when no map is written"),
// but it's too involved to backport it and its dependencies to
// the LTS kernels.
generic/645
#endif

#if LINUX_VERSION_CODE < KERNEL_VERSION(6,6,30)
// This test failure is fixed by commit 631426ba1d45q ("mm/madvise:
// make MADV_POPULATE_(READ|WRITE) handle VM_FAULT_RETRY properly"),
// which first landed in v6.9, and was backported to 6.6.30 as commit
// 631426ba1d45.  Unfortunately, it's too involved to backport it and its
// dependencies to the 6.1 or earlier LTS kernels
generic/743
#endif

#ifndef IS_DAX_CONFIG
// Unless we are testing the dax config, we can exclude all dax tests
-g dax
#endif

// This test is flaky due to a VFS race between freeze/thaw and mount/umount
// See https://lore.kernel.org/r/20240611085210.GA1838544@mit.edu
generic/085
